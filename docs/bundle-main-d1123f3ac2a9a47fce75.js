var Demo;!function(){var n={20:function(n){"use strict";var e="%[a-f0-9]{2}",t=new RegExp(e,"gi"),r=new RegExp("("+e+")+","gi");function o(n,e){try{return decodeURIComponent(n.join(""))}catch(n){}if(1===n.length)return n;e=e||1;var t=n.slice(0,e),r=n.slice(e);return Array.prototype.concat.call([],o(t),o(r))}function a(n){try{return decodeURIComponent(n)}catch(a){for(var e=n.match(t),r=1;r<e.length;r++)e=(n=o(e,r).join("")).match(t);return n}}n.exports=function(n){if("string"!=typeof n)throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof n+"`");try{return n=n.replace(/\+/g," "),decodeURIComponent(n)}catch(e){return function(n){for(var e={"%FE%FF":"��","%FF%FE":"��"},t=r.exec(n);t;){try{e[t[0]]=decodeURIComponent(t[0])}catch(n){var o=a(t[0]);o!==t[0]&&(e[t[0]]=o)}t=r.exec(n)}e["%C2"]="�";for(var i=Object.keys(e),c=0;c<i.length;c++){var s=i[c];n=n.replace(new RegExp(s,"g"),e[s])}return n}(n)}}},806:function(n){"use strict";n.exports=function(n,e){for(var t={},r=Object.keys(n),o=Array.isArray(e),a=0;a<r.length;a++){var i=r[a],c=n[i];(o?-1!==e.indexOf(i):e(i,c,n))&&(t[i]=c)}return t}},75:function(n){(function(){var e,t,r,o,a,i;"undefined"!=typeof performance&&null!==performance&&performance.now?n.exports=function(){return performance.now()}:"undefined"!=typeof process&&null!==process&&process.hrtime?(n.exports=function(){return(e()-a)/1e6},t=process.hrtime,o=(e=function(){var n;return 1e9*(n=t())[0]+n[1]})(),i=1e9*process.uptime(),a=o-i):Date.now?(n.exports=function(){return Date.now()-r},r=Date.now()):(n.exports=function(){return(new Date).getTime()-r},r=(new Date).getTime())}).call(this)},563:function(n,e,t){"use strict";const r=t(610),o=t(20),a=t(500),i=t(806);function c(n){if("string"!=typeof n||1!==n.length)throw new TypeError("arrayFormatSeparator must be single character string")}function s(n,e){return e.encode?e.strict?r(n):encodeURIComponent(n):n}function l(n,e){return e.decode?o(n):n}function u(n){return Array.isArray(n)?n.sort():"object"==typeof n?u(Object.keys(n)).sort(((n,e)=>Number(n)-Number(e))).map((e=>n[e])):n}function f(n){const e=n.indexOf("#");return-1!==e&&(n=n.slice(0,e)),n}function p(n){const e=(n=f(n)).indexOf("?");return-1===e?"":n.slice(e+1)}function d(n,e){return e.parseNumbers&&!Number.isNaN(Number(n))&&"string"==typeof n&&""!==n.trim()?n=Number(n):!e.parseBooleans||null===n||"true"!==n.toLowerCase()&&"false"!==n.toLowerCase()||(n="true"===n.toLowerCase()),n}function v(n,e){c((e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e)).arrayFormatSeparator);const t=function(n){let e;switch(n.arrayFormat){case"index":return(n,t,r)=>{e=/\[(\d*)\]$/.exec(n),n=n.replace(/\[\d*\]$/,""),e?(void 0===r[n]&&(r[n]={}),r[n][e[1]]=t):r[n]=t};case"bracket":return(n,t,r)=>{e=/(\[\])$/.exec(n),n=n.replace(/\[\]$/,""),e?void 0!==r[n]?r[n]=[].concat(r[n],t):r[n]=[t]:r[n]=t};case"comma":case"separator":return(e,t,r)=>{const o="string"==typeof t&&t.includes(n.arrayFormatSeparator),a="string"==typeof t&&!o&&l(t,n).includes(n.arrayFormatSeparator);t=a?l(t,n):t;const i=o||a?t.split(n.arrayFormatSeparator).map((e=>l(e,n))):null===t?t:l(t,n);r[e]=i};case"bracket-separator":return(e,t,r)=>{const o=/(\[\])$/.test(e);if(e=e.replace(/\[\]$/,""),!o)return void(r[e]=t?l(t,n):t);const a=null===t?[]:t.split(n.arrayFormatSeparator).map((e=>l(e,n)));void 0!==r[e]?r[e]=[].concat(r[e],a):r[e]=a};default:return(n,e,t)=>{void 0!==t[n]?t[n]=[].concat(t[n],e):t[n]=e}}}(e),r=Object.create(null);if("string"!=typeof n)return r;if(!(n=n.trim().replace(/^[?#&]/,"")))return r;for(const o of n.split("&")){if(""===o)continue;let[n,i]=a(e.decode?o.replace(/\+/g," "):o,"=");i=void 0===i?null:["comma","separator","bracket-separator"].includes(e.arrayFormat)?i:l(i,e),t(l(n,e),i,r)}for(const n of Object.keys(r)){const t=r[n];if("object"==typeof t&&null!==t)for(const n of Object.keys(t))t[n]=d(t[n],e);else r[n]=d(t,e)}return!1===e.sort?r:(!0===e.sort?Object.keys(r).sort():Object.keys(r).sort(e.sort)).reduce(((n,e)=>{const t=r[e];return Boolean(t)&&"object"==typeof t&&!Array.isArray(t)?n[e]=u(t):n[e]=t,n}),Object.create(null))}e.extract=p,e.parse=v,e.stringify=(n,e)=>{if(!n)return"";c((e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e)).arrayFormatSeparator);const t=t=>e.skipNull&&null==n[t]||e.skipEmptyString&&""===n[t],r=function(n){switch(n.arrayFormat){case"index":return e=>(t,r)=>{const o=t.length;return void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:null===r?[...t,[s(e,n),"[",o,"]"].join("")]:[...t,[s(e,n),"[",s(o,n),"]=",s(r,n)].join("")]};case"bracket":return e=>(t,r)=>void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:null===r?[...t,[s(e,n),"[]"].join("")]:[...t,[s(e,n),"[]=",s(r,n)].join("")];case"comma":case"separator":case"bracket-separator":{const e="bracket-separator"===n.arrayFormat?"[]=":"=";return t=>(r,o)=>void 0===o||n.skipNull&&null===o||n.skipEmptyString&&""===o?r:(o=null===o?"":o,0===r.length?[[s(t,n),e,s(o,n)].join("")]:[[r,s(o,n)].join(n.arrayFormatSeparator)])}default:return e=>(t,r)=>void 0===r||n.skipNull&&null===r||n.skipEmptyString&&""===r?t:null===r?[...t,s(e,n)]:[...t,[s(e,n),"=",s(r,n)].join("")]}}(e),o={};for(const e of Object.keys(n))t(e)||(o[e]=n[e]);const a=Object.keys(o);return!1!==e.sort&&a.sort(e.sort),a.map((t=>{const o=n[t];return void 0===o?"":null===o?s(t,e):Array.isArray(o)?0===o.length&&"bracket-separator"===e.arrayFormat?s(t,e)+"[]":o.reduce(r(t),[]).join("&"):s(t,e)+"="+s(o,e)})).filter((n=>n.length>0)).join("&")},e.parseUrl=(n,e)=>{e=Object.assign({decode:!0},e);const[t,r]=a(n,"#");return Object.assign({url:t.split("?")[0]||"",query:v(p(n),e)},e&&e.parseFragmentIdentifier&&r?{fragmentIdentifier:l(r,e)}:{})},e.stringifyUrl=(n,t)=>{t=Object.assign({encode:!0,strict:!0},t);const r=f(n.url).split("?")[0]||"",o=e.extract(n.url),a=e.parse(o,{sort:!1}),i=Object.assign(a,n.query);let c=e.stringify(i,t);c&&(c=`?${c}`);let l=function(n){let e="";const t=n.indexOf("#");return-1!==t&&(e=n.slice(t)),e}(n.url);return n.fragmentIdentifier&&(l=`#${s(n.fragmentIdentifier,t)}`),`${r}${c}${l}`},e.pick=(n,t,r)=>{r=Object.assign({parseFragmentIdentifier:!0},r);const{url:o,query:a,fragmentIdentifier:c}=e.parseUrl(n,r);return e.stringifyUrl({url:o,query:i(a,t),fragmentIdentifier:c},r)},e.exclude=(n,t,r)=>{const o=Array.isArray(t)?n=>!t.includes(n):(n,e)=>!t(n,e);return e.pick(n,o,r)}},500:function(n){"use strict";n.exports=(n,e)=>{if("string"!=typeof n||"string"!=typeof e)throw new TypeError("Expected the arguments to be of type `string`");if(""===e)return[n];const t=n.indexOf(e);return-1===t?[n]:[n.slice(0,t),n.slice(t+e.length)]}},610:function(n){"use strict";n.exports=n=>encodeURIComponent(n).replace(/[!'()*]/g,(n=>`%${n.charCodeAt(0).toString(16).toUpperCase()}`))}},e={};function t(r){if(e[r])return e[r].exports;var o=e[r]={exports:{}};return n[r].call(o.exports,o,o.exports,t),o.exports}t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,{a:e}),e},t.d=function(n,e){for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var r={};!function(){"use strict";t.r(r);var n=t(75),e=t.n(n),o=t(563);function a(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var i=/^(#)?([0-9a-f]+)$/i;function c(n){var e=n.toString(16);return 1===e.length?"0"+e:e}function s(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+6*(e-n)*t:t<.5?e:t<2/3?n+(e-n)*(2/3-t)*6:n}var l,u,f,p,d,v,m,x,y,g,h,b,E,_,T,R,w,A,z=function(){function n(e,t,r){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.r=void 0,this.g=void 0,this.b=void 0,this.r=e,this.g=t,this.b=r}var e,t,r;return e=n,r=[{key:"validate",value:function(e){var t;if("string"!=typeof e||!(t=i.exec(e)))return null;var r=t[2];return 3===r.length?new n(17*parseInt(r[0],16),17*parseInt(r[1],16),17*parseInt(r[2],16)):6===r.length?new n(parseInt(r.substring(0,2),16),parseInt(r.substring(2,4),16),parseInt(r.substring(4,6),16)):null}},{key:"from",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(Array.isArray(e)){for(var r=e.length,o=new Float32Array(3*r),a=t/255,i=0,c=0;c<r;c++){var s=n.from(e[c]);o[i++]=s.r*a,o[i++]=s.g*a,o[i++]=s.b*a}return o}var l=n.validate(e);if(!l)throw new Error("Invalid color "+e);return l.r*=t,l.g*=t,l.b*=t,l}},{key:"fromHSL",value:function(e,t,r){var o,a,i;if(t<=0)o=a=i=r;else{var c=r<.5?r*(1+t):r+t-r*t,l=2*r-c;o=s(l,c,e+1/3),a=s(l,c,e),i=s(l,c,e-1/3)}return new n(Math.round(255*o),Math.round(255*a),Math.round(255*i))}}],(t=[{key:"mix",value:function(e,t,r){return r||(r=new n),r.r=this.r+(e.r-this.r)*t|0,r.g=this.g+(e.g-this.g)*t|0,r.b=this.b+(e.b-this.b)*t|0,r}},{key:"multiply",value:function(e,t){return t||(t=new n),t.r=this.r*e,t.g=this.g*e,t.b=this.b*e,t}},{key:"toRGBHex",value:function(){return"#"+c(this.r)+c(this.g)+c(this.b)}},{key:"toHex",value:function(){return(this.r<<16)+(this.g<<8)+this.b}}])&&a(e.prototype,t),r&&a(e,r),n}(),I=(Math.sqrt(5),Math.PI,{width:0,height:0}),S=0,D=0,U=+(o.parse(location.search).sym||"7");function k(){var n=-16&window.innerWidth,e=0|window.innerHeight;I.width=n,I.height=e,l.width=n,l.height=e,S=n/2,D=e/2,u.viewport(0,0,l.width,l.height)}function F(n,e,t){var r=n.createShader(e);if(n.shaderSource(r,t),n.compileShader(r),n.getShaderParameter(r,n.COMPILE_STATUS))return r;console.error(n.getShaderInfoLog(r)),n.deleteShader(r)}function C(n){var t=E?1:-1;u.uniform1f(d,e()()/1e3),u.uniform1f(v,U),u.uniform2f(m,I.width,I.height),u.uniform4f(x,S,I.height-D,_*t,(I.height-T)*t),u.clearColor(0,0,0,0),u.clear(u.COLOR_BUFFER_BIT);var r=u.TRIANGLES;u.drawArrays(r,0,6),requestAnimationFrame(C)}function L(n){E&&(S=n.clientX-R.left+self.pageXOffset,D=n.clientY-R.top+self.pageYOffset)}function O(n){E=!0,_=n.clientX-R.left+self.pageXOffset,T=n.clientY-R.top+self.pageYOffset,S=_,D=T}function P(n){E=!1}window.onload=function(){if(l=document.getElementById("screen"),!(u=l.getContext("webgl2")))return l.parentNode.removeChild(l),"Cannot run shader. Your browser does not support WebGL2.",void(document.getElementById("out").innerHTML="<p>Cannot run shader. Your browser does not support WebGL2.</p>");var n=F(u,u.VERTEX_SHADER,"#version 300 es\n#define GLSLIFY 1\n\n// an attribute is an input (in) to a vertex shader.\n// It will receive data from a buffer\nin vec4 a_position;\n\n// all shaders have a main function\nvoid main() {\n\n    // gl_Position is a special variable a vertex shader\n    // is responsible for setting\n    gl_Position = a_position;\n}\n"),e=F(u,u.FRAGMENT_SHADER,"#version 300 es\nprecision highp float;\n#define GLSLIFY 1\n\nuniform float u_time;\nuniform float u_symmetry;\n\nuniform vec2 u_resolution;\nuniform vec4 u_mouse;\nuniform vec3 u_palette[8];\nuniform float u_shiny[8];\nuniform sampler2D u_env;\nuniform sampler2D u_env_ref;\n\nconst float pi = 3.141592653589793;\nconst float tau = pi * 2.0;\nconst float invTau = 1.0 / tau;\nconst float hpi = pi * 0.5;\nconst float phi = (1.0+sqrt(5.0))/2.0;\n\nvec3 toLinearFactor = vec3(2.2);\nvec3 toRGBFactor = vec3(1./2.2);\n\nout vec4 outColor;\n\nstruct opts {\n    float dummy;\n};\n\n#define MAX_STEPS 200\n#define MAX_DIST 1000.\n#define SURF_DIST .001\n\n#define ROT(a) mat2(cos(a), -sin(a), sin(a), cos(a))\n#define SHEARX(a) mat2(1, 0, sin(a), 1)\n\n////////////////////// NOISE\n\n//\tSimplex 3D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nfloat snoise(vec3 v){\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n    // First corner\n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n    // Other corners\n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n\n    //  x0 = x0 - 0. + 0.0 * C\n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n    // Permutations\n    i = mod(i, 289.0 );\n    vec4 p = permute( permute( permute(\n    i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n    // Gradients\n    // ( N*N points uniformly over a square, mapped onto an octahedron.)\n    float n_ = 1.0/7.0; // N=7\n    vec3  ns = n_ * D.wyz - D.xzx;\n\n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n\n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n\n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n\n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n\n    //Normalise gradients\n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n\n    // Mix final noise value\n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n    dot(p2,x2), dot(p3,x3) ) );\n}\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\n// Camera helper\n\nvec3 Camera(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n    r = normalize(\n    cross(\n    vec3(0, 1, 0),\n    f\n    )\n    ),\n    u = cross(f, r),\n    c = p + f * z,\n    i = c + uv.x*r + uv.y*u,\n    d = normalize(i-p);\n    return d;\n}\n\n// 2d rotation matrix helper\nmat2 Rot(float a) {\n    float x = cos(a);\n    float y = sin(a);\n    return mat2(x, -y, y, x);\n}\n\n// RAY MARCHING PRIMITIVES\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5+0.5*(b-a)/k, 0., 1.);\n    return mix(b, a, h) - k*h*(1.0-h);\n}\n\nfloat sdCapsule(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    return length(p-c)-r;\n}\n\nfloat sdCylinder(vec3 p, vec3 a, vec3 b, float r) {\n    vec3 ab = b-a;\n    vec3 ap = p-a;\n\n    float t = dot(ab, ap) / dot(ab, ab);\n    //t = clamp(t, 0., 1.);\n\n    vec3 c = a + t*ab;\n\n    float x = length(p-c)-r;\n    float y = (abs(t-.5)-.5)*length(ab);\n    float e = length(max(vec2(x, y), 0.));\n    float i = min(max(x, y), 0.);\n\n    return e+i;\n}\n\nfloat sdCappedCylinder( vec3 p, float h, float r )\n{\n    vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(h,r);\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdSphere(vec3 p, float s)\n{\n    return length(p)-s;\n}\n\nfloat sdTorus(vec3 p, vec2 r) {\n    float x = length(p.xz)-r.x;\n    return length(vec2(x, p.y))-r.y;\n}\n\nfloat sdRoundBox(vec3 p, vec3 b, float r)\n{\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - r;\n}\n\nfloat sdBeam(vec3 p, vec3 c)\n{\n    return length(p.xz-c.xy)-c.z;\n}\n\nfloat dBox(vec3 p, vec3 s) {\n    p = abs(p)-s;\n    return length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 opUnion(vec2 curr, float d, float id)\n{\n    if (d < curr.x)\n    {\n        curr.x = d;\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nvec2 softMinUnion(vec2 curr, float d, float id)\n{\n    float nx = smin(curr.x, d, 0.5);\n    if (nx < curr.x)\n    {\n        curr.x = nx;\n        curr.y = id;\n    }\n\n    return curr;\n}\n\nfloat sdBoundingBox(vec3 p, vec3 b, float e)\n{\n    p = abs(p)-b;\n    vec3 q = abs(p+e)-e;\n    return min(min(\n    length(max(vec3(p.x, q.y, q.z), 0.0))+min(max(p.x, max(q.y, q.z)), 0.0),\n    length(max(vec3(q.x, p.y, q.z), 0.0))+min(max(q.x, max(p.y, q.z)), 0.0)),\n    length(max(vec3(q.x, q.y, p.z), 0.0))+min(max(q.x, max(q.y, p.z)), 0.0));\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n    p = abs(p);\n    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n    vec2 d = vec2(\n    length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n    p.z-h.y );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat shape(float v, float x)\n{\n    return x > 0.0 ? -abs(v) : abs(v);\n}\n\nconst mat2 frontPlaneRot = ROT(0.05235987755982988);\n\nconst float sin60 = sin(tau/6.0);\nvec2 N22 (vec2 p) {\n    vec3 a = fract(p.xyx*vec3(123.34, 234.34, 345.65));\n    a += dot(a, a+34.45);\n    return fract(vec2(a.x*a.y, a.y*a.z));\n}\n\nfloat atan2(in float y, in float x)\n{\n    return abs(x) > abs(y) ? hpi - atan(x,y) : atan(y,x);\n}\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\nfloat sdRoundedCylinder( vec3 p, float ra, float rb, float h )\n{\n    vec2 d = vec2( length(p.xz)-2.0*ra+rb, abs(p.y) - h );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0)) - rb;\n}\n\nfloat sdRhombus( in vec2 p, in vec2 b )\n{\n    vec2 q = abs(p);\n    float h = clamp((-2.0*ndot(q,b)+ndot(b,b))/dot(b,b),-1.0,1.0);\n    float d = length( q - 0.5*b*vec2(1.0-h,1.0+h) );\n    return d * sign( q.x*b.y + q.y*b.x - b.x*b.y );\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nvec2 getDistance(vec3 p, opts o) {\n\n    mat2 rot45 = Rot(tau * 0.125);\n    mat2 rot37 = Rot(tau * 0.19);\n\n    vec3 q = p - vec3( 0,2,0);\n    q.xy *= rot45;\n    q.yz *= rot37;\n\n    vec2 result = vec2(p.y, 2.0);\n    result = opUnion(result, sdBox(q, vec3(1.5)) - 0.04, 3.0);\n    result = opUnion(result, sdTorus(p - vec3( 0,2,0), vec2(4.0, 1.0)), 4.0);\n    return result;\n\n}\n\nvec2 rayMarch(vec3 ro, vec3 rd, opts o) {\n\n    float dO = 0.;\n    float id = 0.0;\n\n    for (int i=0; i < MAX_STEPS; i++) {\n        vec3 p = ro + rd*dO;\n        vec2 result = getDistance(p, o);\n        float dS = result.x;\n        dO += dS;\n        id = result.y;\n        if (dO > MAX_DIST || abs(dS) < SURF_DIST * 0.001*(dO*.125 + 1.))\n        break;\n    }\n\n    return vec2(dO, id);\n}\n\n//vec3 getNormal(vec3 p, opts o) {\n//    float d = getDistance(p, o).x;\n//    vec2 e = vec2(.01, 0);\n//\n//    vec3 n = d - vec3(\n//    getDistance(p-e.xyy, o).x,\n//    getDistance(p-e.yxy, o).x,\n//    getDistance(p-e.yyx, o).x\n//    );\n//\n//    return normalize(n);\n//}\n\nvec3 getNormal(vec3 p, opts o)// for function f(p)\n{\n    const float h = 0.0001;// replace by an appropriate value\n    const vec2 k = vec2(1, -1);\n    return normalize(k.xyy*getDistance(p + k.xyy*h, o).x +\n    k.yyx*getDistance(p + k.yyx*h,o).x +\n    k.yxy*getDistance(p + k.yxy*h,o).x +\n    k.xxx*getDistance(p + k.xxx*h,o).x);\n}\n\nvec3 getPaletteColor(float id)\n{\n    int last = u_palette.length() - 1;\n    //return id < float(last) ? mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id)) : u_palette[last];\n    return mix(u_palette[int(id)], u_palette[int(id) + 1], fract(id));\n}\n\nvec3 applyFog(\nin vec3  rgb,      // original color of the pixel\nin float distance, // camera to point distance\nin vec3  rayOri,   // camera position\nin vec3  rayDir,\nin vec3 p     // camera to point vector\n)\n{\n    float pos = p.z;\n\n    float c = 0.005;\n    float b = 0.001;// + sin((pos + p.x * sin(pos * 0.27)) * 0.31 ) * 0.15 + sin(pos * 0.17 ) * 0.15;\n\n    float fogAmount = c * exp(-rayOri.y*b) * (1.0-exp( -distance*rayDir.y*b ))/rayDir.y;\n    vec3  fogColor  = vec3(1);\n    return mix( rgb, fogColor, fogAmount );\n}\n\nfloat softshadow( in vec3 ro, in vec3 rd, float k , opts o)\n{\n    float res = 1.0;\n    float ph = 1e20;\n    for( float t=0.001; t< MAX_DIST; )\n    {\n        float h = getDistance(ro + rd*t, o).x;\n        if( h < 0.0001 )\n        return 0.0;\n\n        float y = h * h / ( 2.0 * ph );\n        float d = sqrt( h * h - y * y);\n        res = min( res, k * d /max(0.0, t -y) );\n        ph = h;\n        t += h;\n    }\n    return res;\n}\n\nvec3 getBackground(in vec3 n)\n{\n    vec3 col = n;// * 0.5 + 0.5;\n\n    col = col*col*col*col;\n\n    return (mix(vec3(1,0,0), vec3(0,1,0), -n.z) +\n    mix(vec3(0,0,1), vec3(1,1,0), n.y) +\n    mix(vec3(0,0,0), vec3(0,1,1), n.x));\n}\n\nvec3 getEnv(in vec3 n, bool ref)\n{\n    // Computing longitude\n    float x = atan( -n.z, -n.x ) * invTau + 0.5;\n\n    // Computing latitude\n    float y = -n.y * 0.5 + 0.5;\n\n    if (ref)\n    {\n        return texture(u_env_ref, vec2(x,y)).rgb;\n    }\n    else\n    {\n        return texture(u_env, vec2(x,y)).rgb;\n    }\n\n}\n\nvoid main(void)\n{\n    const int mirrorLimit = 5;\n\n    vec2 ratio = vec2(1, 1);\n\n    vec2 uv = vec2(0);\n    if (u_symmetry == 0.0)\n    {\n        uv = (gl_FragCoord.xy * ratio - .5 * u_resolution.xy * ratio)/min(u_resolution.x, u_resolution.y);\n    }\n    else\n    {\n        float size = min(u_resolution.x, u_resolution.y);\n\n        float tx = ((gl_FragCoord.x) / size) * 2.0 - 1.0;\n        float ty = 1.0 - ((gl_FragCoord.y) / size) * 2.0;\n\n        if (u_resolution.x < u_resolution.y)\n        {\n            ty -= (u_resolution.y - u_resolution.x) / size;\n        }\n        else\n        {\n            tx -= (u_resolution.x - u_resolution.y) / size;\n        }\n\n        float a0 = ((atan2(ty,tx) - pi/2.0) / tau) * u_symmetry * 2.0;\n        float id = floor(a0);\n        float c = mod(id,2.0);\n        float a = c - fract(a0) * (c * 2.0 - 1.0);\n        float dist = sqrt( tx * tx + ty * ty);\n\n        float symAngle = tau/(u_symmetry*2.0);\n\n        uv = vec2(\n        cos(a * symAngle) * dist * 0.5,\n        sin(a * symAngle) * dist * 0.5\n        );\n\n    }\n\n    vec2 m = u_mouse.xy/u_resolution.xy;\n\n    vec3 ro = vec3(\n        0,\n        8.0,\n        -10.0\n    );\n\n    float rotTime = u_time * 0.05;\n    float hopTime = u_time * 0.12;\n\n    const float minY = -0.2;\n    const float maxY = 0.26;\n\n    const float cy = (minY + maxY) / 2.0;\n    const float amp = maxY - cy;\n\n    //mat2 yzRot = Rot(min(1.15,  max(-0.25, -m.y + 0.5) * pi));\n    mat2 yzRot = Rot(min(maxY,  max(minY, -m.y + 0.5 + sin(hopTime) * amp)) * pi);\n    //mat2 yzRot = Rot((-m.y + 0.5) * pi);\n    //mat2 yzRot = Rot(max(-0.08, -m.y + 0.5) * pi);\n    ro.yz *= yzRot;\n\n    mat2 xzRot = Rot((-m.x + 0.5 + rotTime)* 7.0);\n\n    ro.xz *= xzRot;\n\n    vec3 lookAt = vec3(0, 2.5, 0);\n\n    vec3 rd = Camera(uv, ro, lookAt, 1.3);\n\n    // aproximated direction of the moon in our tabula-rasa.jpg env map\n\n    float angle = tau * 0.5875;\n\n    vec3 sunDir = normalize(vec3(cos(angle), 0.4, sin(angle)));\n\n    vec3 sunColor = vec3(4.5);\n\n    vec3 col = vec3(0,0,1);\n\n    opts o = opts(0.0);\n\n    vec2 result = rayMarch(ro, rd, o);\n    float d = result.x;\n    vec3 p = ro + rd * d;\n    if (d < MAX_DIST) {\n\n        //vec3 lightPos = vec3(-40,20,0);\n        vec3 norm = getNormal(p, o);\n        float id = result.y;\n\n        int count = 0;\n        while (id == 1.0 && count < mirrorLimit)\n        {\n            vec3 ref = reflect(rd, norm);\n            result = rayMarch(p + ref * 0.00001, ref, o);\n\n            float d2 = result.x;\n            vec3 p2 = p + ref * d2;\n\n            p = p2;\n            rd = ref;\n            d += d2;\n\n            if (d2 < MAX_DIST) {\n                norm = getNormal(p, o);\n                id = result.y;\n            }\n            else\n            {\n                count = mirrorLimit;\n            }\n            count++;\n        }\n\n        if ( round(id) == 1.0 || count >= mirrorLimit)\n        {\n            col = getEnv(rd, false);\n        }\n        else if (round(id) < 5.0)\n        {\n\n            // specular\n            vec3 viewDir = normalize(rd);\n            vec3 reflectDir = reflect(sunDir, norm);\n\n            // diffuse\n            float diff = max(dot(norm, sunDir), 0.0);\n\n            vec3 ref = reflect(rd, norm);\n\n            vec3 tone = id == 2.0 ? pow(getEnv(rd, false), toLinearFactor) : getPaletteColor(id);\n\n            float shadow = softshadow(p, sunDir, 0.7, o);\n\n            vec3 refColor = pow(getEnv(rd, true), toLinearFactor) * 0.1;\n\n            vec3 diffuse = diff * tone * sunColor * shadow + refColor;\n            float spec = pow(max(dot(viewDir, reflectDir), 0.0), u_shiny[int(id)]);\n            vec3 specular = sunColor * spec * shadow;\n            //col = applyFog((id == 2.0 ? diffuse : diffuse + specular), d, ro, rd, p);\n            col = pow((id == 2.0 ? diffuse : diffuse + specular), toRGBFactor);\n        }\n        else\n        {\n            vec3 tone = getPaletteColor(id);\n            col = tone * 5000.0/(d*d);\n        }\n\n    }\n    else\n    {\n        col = getEnv(rd, false);\n    }\n\n    outColor = vec4(\n        col,\n        1.0\n    );\n\n    //outColor = vec4(1,0,1,1);\n}\n");p=function(n,e,t){var r=n.createProgram();if(n.attachShader(r,e),n.attachShader(r,t),n.linkProgram(r),n.getProgramParameter(r,n.LINK_STATUS))return r;console.error(n.getProgramInfoLog(r)),n.deleteProgram(r)}(u,n,e);var t=u.getAttribLocation(p,"a_position"),r=u.createBuffer();u.bindBuffer(u.ARRAY_BUFFER,r),u.bufferData(u.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,1,1,-1]),u.STATIC_DRAW),f=u.createVertexArray(),u.bindVertexArray(f),u.enableVertexAttribArray(t);var o=u.FLOAT;u.vertexAttribPointer(t,2,o,!1,0,0),k(),w=u.createTexture();var a=document.getElementById("env");u.bindTexture(u.TEXTURE_2D,w),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,2048,1024,0,u.RGBA,u.UNSIGNED_BYTE,a),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.LINEAR_MIPMAP_LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.REPEAT),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.REPEAT),u.generateMipmap(u.TEXTURE_2D),u.bindTexture(u.TEXTURE_2D,null);var i=document.getElementById("env-ref");A=u.createTexture(),u.bindTexture(u.TEXTURE_2D,A),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,2048,1024,0,u.RGBA,u.UNSIGNED_BYTE,i),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.LINEAR_MIPMAP_LINEAR),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.REPEAT),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.REPEAT),u.generateMipmap(u.TEXTURE_2D),u.bindTexture(u.TEXTURE_2D,null),d=u.getUniformLocation(p,"u_time"),v=u.getUniformLocation(p,"u_symmetry"),m=u.getUniformLocation(p,"u_resolution"),x=u.getUniformLocation(p,"u_mouse"),y=u.getUniformLocation(p,"u_palette"),g=u.getUniformLocation(p,"u_shiny"),h=u.getUniformLocation(p,"u_env"),b=u.getUniformLocation(p,"u_env_ref"),u.useProgram(p),u.bindVertexArray(f),window.addEventListener("resize",k,!0),l.addEventListener("mousemove",L,!0),l.addEventListener("mousedown",O,!0),document.addEventListener("mouseup",P,!0);var c=document.getElementById("control");c.setAttribute("value",String(U)),c.addEventListener("change",(function(n){return U=+n.target.value}),!0),window.addEventListener("touchstart",O,!0),window.addEventListener("touchmove",L,!0),window.addEventListener("touchend",P,!0),R=document.getElementById("screen").getBoundingClientRect();var s=z.from(["#010101","#fff","#fff","#0081ff","#ff0082","#fff","#f0f","#0f0"],1);u.uniform3fv(y,s),u.uniform1fv(g,new Float32Array([10,10,10,10,10,10,10,10])),u.activeTexture(u.TEXTURE0),u.bindTexture(u.TEXTURE_2D,w),u.uniform1i(h,0),u.activeTexture(u.TEXTURE1),u.bindTexture(u.TEXTURE_2D,A),u.uniform1i(b,1),requestAnimationFrame(C)}}(),Demo=r}();
//# sourceMappingURL=bundle-main-d1123f3ac2a9a47fce75.js.map